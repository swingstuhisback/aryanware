getgenv().stableBuild = false


local Players = game:GetService("Players") local player = Players.LocalPlayer local sound = Instance.new("Sound") sound.SoundId = "rbxassetid://9059590824" sound.Parent = player:WaitForChild("PlayerGui") sound:Play() sound.Ended:Connect(function() sound:Destroy() end) local coreGui = game:GetService("CoreGui") local screenGui = Instance.new("ScreenGui", coreGui) local textLabel = Instance.new("TextLabel", screenGui) textLabel.Text = "aryanware" textLabel.Size = UDim2.new(0, 600, 0, 50) textLabel.Position = UDim2.new(0.5, -300, 0.5, -25) textLabel.BackgroundTransparency = 1 textLabel.TextColor3 = Color3.fromRGB(128, 0, 128) textLabel.TextStrokeTransparency = 0.8 textLabel.TextScaled = true textLabel.TextStrokeColor3 = Color3.fromRGB(0, 0, 0) textLabel.TextTransparency = 1 local function tweenTextLabel(textLabel, goal, duration) local tweenService = game:GetService("TweenService") local tweenInfo = TweenInfo.new(duration, Enum.EasingStyle.Quad, Enum.EasingDirection.Out) local tween = tweenService:Create(textLabel, tweenInfo, goal) tween:Play() tween.Completed:Wait() end tweenTextLabel(textLabel, {TextTransparency = 0}, 1) wait(1) tweenTextLabel(textLabel, {Position = UDim2.new(0.5, -300, 0, 10), Size = UDim2.new(0, 600, 0, 50)}, 1) tweenTextLabel(textLabel, {Position = UDim2.new(0.5, -textLabel.Size.X.Offset/2, 0, 10)}, 0.5)
getgenv().SilentKeyy = 'c'
getgenv().PredictionAmmount = 0.278
getgenv().ogPos = "none"

getgenv().aryanLBYamt = 0
getgenv().aryanLBY = false

-- item position

--local game.Workspace.Ignored.Shop["[Revolver] - $1485"]
--local game.Workspace.Ignored.Shop["[Double-Barrel SG] - $1485"].Head
--local game.Workspace.Ignored.Shop["[LMG] - $3978"]
getgenv().revoCFrame = "533.654968, 1.72500229, -248.940033, -1.1920929e-07, 0, 1.00000012, 0, 1, 0, -1.00000012, 0, -1.1920929e-07"
getgenv().dbCFrame = "-1039.59985, 18.8513641, -256.449951, -1, 0, 0, 0, 1, 0, 0, 0, -1"
getgenv().lmgCFame = "-620.882263, 20.2999878, -305.339264, 1, 0, 0, 0, 1, 0, 0, 0, 1"

-- food position

--local game.Workspace.Ignored.Shop["[Taco] - $2"]
--local game.Workspace.Ignored.Shop["[Chicken] - $7"]
--local game.Workspace.Ignored.Shop["[Hamburger] - $11"]
getgenv().hambCFrame = "-605.575012, 18.9750004, 289.925049, 0, 0, -1, 0, -1, -0, -1, 0, -0"
getgenv().tacoCFrame = "584.026855, 48.1605072, -474.033936, 1, 0, 0, 0, 1, 0, 0, 0, 1"
getgenv().chickenCFrame = "-322.046021, 24.2827263, -296.468079, 0, 0, -1, 0, 1, 0, 1, 0, 0"

-- ammo position

--local game.Workspace.Ignored.Shop["18 [Double-Barrel SG Ammo] - $64"]
--local game.Workspace.Ignored.Shop["12 [Revolver Ammo] - $53"]
--local game.Workspace.Ignored.Shop["200 [LMG Ammo] - $318"]
getgenv().lmgAmmoCFrame = "-616.182312, 20.3000107, -305.339172, -1, 0, 0, 0, 1, 0, 0, 0, -1"
getgenv().dbAmmoCFrame = "-1046.20032, 18.8513641, -256.449951, -1, 0, 0, 0, 1, 0, 0, 0, -1"
getgenv().revoAmmoCFrame = "533.654968, 1.73051262, -257.540009, -1.1920929e-07, 0, 1.00000012, 0, 1, 0, -1.00000012, 0, -1.1920929e-07"

-- armor position

--local game.Workspace.Ignored.Shop["[Medium Armor] - $1326"]
--local game.Workspace.Ignored.Shop["[High-Medium Armor] - $2440"]
--local game.Workspace.Ignored.Shop["[Fire Armor] - $2493"]
getgenv().mediumArmorCFrame = "409.312225, 45.1269989, -54.6504784, -1, 0, 0, 0, 1, 0, 0, 0, -1"
getgenv().highArmorCFrame = "-934.025024, -28.149826, 570.549683, 1, 0, 0, 0, 1, 0, 0, 0, 1"
getgenv().fireArmorCFrame = "-934.027588, -4.87227058, 151.993652, 1, -0, 0, 0, 1, 8.63220121e-05, -0, -8.63220121e-05, 1"


--// Main Libarys \\--
local libary = loadstring(game:HttpGet("https://raw.githubusercontent.com/swingstuhisback/aryanware/main/homo.lib"))()
local NotifyLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/swingstuhisback/aryanware/main/homo.notif"))()
local Notify = NotifyLibrary.Notify
--// Service Handler \\--
local GetService = setmetatable({}, {
    __index = function(self, key)
        return game:GetService(key)
    end
})
--// Services \\--
local HighlightFolder = nil
local currentHighlight = nil
local currentTarget = nil
local RunService = GetService.RunService
local Players = GetService.Players
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local CurrentCamera = workspace.CurrentCamera
local UserInputService = GetService.UserInputService
local Unpack = table.unpack
local GuiInset = GetService.GuiService:GetGuiInset()
local Insert = table.insert
local Network = GetService.NetworkClient
local StarterGui = GetService.StarterGui
local tweenService = GetService.TweenService
local ReplicatedStorage = GetService.ReplicatedStorage
local http = GetService.HttpService
local lighting = GetService.Lighting
makefolder("aryanware")

--// Start \\--
getgenv().targetChams = false
local PuppySettings = {
    SilentAim = {
        Enabled = false,
        UseFOV = false,
        ShowFOV = false,
        FOVColor = Color3.new(0.603921, 0.011764, 1),
  DOTColor = Color3.fromRGB(0, 71, 212),
        WallCheck = false,
        KnockedCheck = false,
  PingPred1 = false,
  PingPred2 = false,
        GrabbedCheck = false,
        ShowHitbox = false,
        NotificationMode = false,
        AirShotMode = false,
        UseNearestDistance = false,
  RandomHitbox = false,
        Hitboxes = "HumanoidRootPart",
  Selected = nil
    },
    SilentAimSettings = {
        MovementPrediction = false,
        MovementPredictionAmount = getgenv().PredictionAmmount,
        HitChance = false,
        HitChanceAmount = {
            HitPercent = 100,
            NotHitPercent = 0
        }
    },
 Aimbot = {
  Enabled = true,
  Prediction = true,
  Hitboxes = "HumanoidRootPart"
 },
    AimbotSettings = {
  Mode = "Camera",
  Smoothness = false,
  SmoothnessAmmount = 0.0334,
  PredictionVelocity = 10
    },
 AntiAim = {
  Enabled = false,
  Desync = false,
  Legit = false,
  FPSUnlocked = false,
  LegitAAKey = Enum.KeyCode.Z,
  DesyncValues = {
   Velocity = -100,
   CFrame = -100
  }
 },
 BackTracking = {
  Enabled = false
 },
 AutoPeak = {
  Enabled = false,
  APKey = Enum.KeyCode.N,
 },
 AutoClicker = {
  Enabled = false,
  Keybind = Enum.KeyCode.B
 },
 Misc = {
 CFrameSpeed = {
  Enabled = false,
  Bhop = false,
  Keybind = Enum.KeyCode.V,
  Speed = 1,
 },
 Strafe = false,
 Antislow = false,
 },
    FOV = {
        FOVFilled = false,
        Transparency = 9,
        SilentAimSize = 100,
        Thickness = 2
    },
 Esp = {
  Enabled = true,
  Bones = true,
 },
 TriggerBot = {
        Enabled = false,
  DelayAmount = 0
    },
    TargetGui = {
        Enabled = false
    },
    Whitelist = {
        Players = {},
        Friends = {},
        Holder = "",
        Enabled = false,
        CrewEnabled = false,
        FriendsWhitelist = false
    },
}
local PuppyStorage = {
    GetStrafeAngle = 0,
    BHoping = false,
    Side = "Right",
    StoredRange = 10,
    HeldSpace = false,
    GetPrediction = 0.165,
    Instance = {},
    Equipable = false,
    FPSBeat = 0,
    GetTime = 0,
    Macro = false
}
local PuppyModule = {
    Instance = {}
}

local Window = libary:new({name = "aryanware reborn [v0.4b]", accent = Color3.fromRGB(208, 0, 255), textsize = 13})

local AimingTab = Window:page({name = "aim"})
local AATab = Window:page({name = "anti-aim"})
local VisualTab = Window:page({name = "visuals"})
local MiscTab = Window:page({name = "misc"})
local BuyTab = Window:page({name = "items"})

local aaMainSection = AATab:section({name = "aryanware camera breaker",side = "left", size = 200})

local VisualMainSection = VisualTab:section({name = "main",side = "left", size = 200})
local VisualSkySection = VisualTab:section({name = "sky & misc",side = "right", size = 200})
local VisualPurpSection = VisualTab:section({name = "purple modifiers",side = "right", size = 200})
local MiscMoveSettings = MiscTab:section({name = "movement",side = "left", size = 200})
local MiscCharSettings = MiscTab:section({name = "char",side = "left", size = 50})
local MiscFunSettings = MiscTab:section({name = "interesting", side = "right", size = 50})
local MiscDbgSettings = MiscTab:section({name = "debug tools", side = "right", size = 150})

local BuyGunSection = BuyTab:section({name = "weapons", side = "left", size = 150})
local BuyAmmoSection = BuyTab:section({name = "ammo", side = "right", size = 150})
local BuyArmorSection = BuyTab:section({name = "armor", side = "right", size = 150})
local BuyFoodSection = BuyTab:section({name = "food", side = "left", size = 100})


-- Aimbot Section --
local AimbotSection = AimingTab:section({name = "aimlock [C]", side = "right",size = 200})
AimbotSection:toggle({name = "aimlock enabled", def = true, callback = function(Boolean)
    PuppySettings.Aimbot.Enabled = Boolean
end})


AimbotSection:toggle({name = "prediction", def = true, callback = function(Boolean)
    PuppySettings.Aimbot.Prediction = Boolean
end})

AimbotSection:toggle({name = "target chams", def = false, callback = function(Boolean)
    getgenv().targetChams = Boolean
    if getgenv().targetChams then
        local FillColor = Color3.fromRGB(193, 0, 255)
        local DepthMode = "AlwaysOnTop"
        local FillTransparency = 0.35
        local OutlineColor = Color3.fromRGB(255, 255, 255)
        local OutlineTransparency = 0.5

        local CoreGui = game:GetService("CoreGui")
        local Players = game:GetService("Players")
        local lp = Players.LocalPlayer
        local connections = {}

        HighlightFolder = Instance.new("Folder")
        HighlightFolder.Parent = CoreGui
        HighlightFolder.Name = "Highlight_Storage"

        local function Highlight(plr)
            if plr.Team == lp.Team then return end
            local highlight = Instance.new("Highlight")
            highlight.Name = plr.Name
            highlight.FillColor = FillColor
            highlight.DepthMode = DepthMode
            highlight.FillTransparency = FillTransparency
            highlight.OutlineColor = OutlineColor
            highlight.OutlineTransparency = OutlineTransparency
            highlight.Parent = HighlightFolder

            local function updateHighlight(char)
                if highlight and char then
                    highlight.Adornee = char
                end
            end

            plr.CharacterAdded:Connect(updateHighlight)
            if plr.Character then
                updateHighlight(plr.Character)
            end

            connections[plr] = plr.CharacterRemoving:Connect(function()
                if highlight then
                    highlight.Adornee = nil
                end
            end)
        end

        Players.PlayerAdded:Connect(Highlight)
        for _, v in pairs(Players:GetPlayers()) do
            Highlight(v)
        end

        Players.PlayerRemoving:Connect(function(plr)
            local plrname = plr.Name
            if HighlightFolder:FindFirstChild(plrname) then
                HighlightFolder[plrname]:Destroy()
            end
            if connections[plr] then
                connections[plr]:Disconnect()
            end
        end)

        lp.CharacterAdded:Connect(function()
            for _, v in pairs(connections) do
                v:Disconnect()
            end
            table.clear(connections)
            HighlightFolder:ClearAllChildren()
        end)
    else
        if HighlightFolder then
            HighlightFolder:Destroy()
            HighlightFolder = nil
        end
    end
end
})

local function removeHighlight()
if currentHighlight then
    currentHighlight:Destroy()
    currentHighlight = nil
    currentTarget = nil
end
end
AimbotSection:dropdown({name = "aim hitbox", def = "HumanoidRootPart", max = 4, options = {"Head","HumanoidRootPart"}, callback = function(part)
    PuppySettings.Aimbot.Hitboxes = part
end})


-- Aimbot Settings Section --

local AimbotSettings = AimingTab:section({name = "aimbot settings", side = "left",size = 150})

AimbotSettings:dropdown({name = "aim type", def = "Camera", max = 4, options = {"Camera","Mouse",}, callback = function(part)
    PuppySettings.AimbotSettings.Mode = part
end})
AimbotSettings:slider({name = "prediction velocity", def = 10, max = 60, min = 10, rounding = true, callback = function(Value)
    PuppySettings.AimbotSettings.PredictionVelocity = Value
end})

-- antilock

aaMainSection:toggle({name = "anti-lock", def = false, callback = function(Boolean)
    getgenv().aryanLBY = Boolean
end})

aaMainSection:keybind({name = "anti-lock keybind", def = Enum.KeyCode.Z, callback = function(Key)
        getgenv().aryanLBY = not getgenv().aryanLBY
   end})

game:GetService("RunService").RenderStepped:Connect(function()
    getgenv().aryanLBYamt = math.random(-420, 420)
end)

-- Apply anti-lock effect on heartbeat
game:GetService("RunService").Heartbeat:Connect(function()
    if getgenv().aryanLBY then
        local vel = game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity
        game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = Vector3.new(0, getgenv().aryanLBYamt, 0)
        game:GetService("RunService").RenderStepped:Wait()
        game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = vel
    end
end)

--// Visual Sections
local wantedEnabled = false -- Variable to track wanted ESP toggle state

VisualMainSection:toggle({name = "esp enabled", def = false, callback = function(Boolean)
    getgenv().nameEnabled = Boolean

    local c = workspace.CurrentCamera
    local ps = game:GetService("Players")
    local lp = ps.LocalPlayer
    local rs = game:GetService("RunService")

    -- Check if nameEnabled is true
    local function isNameEnabled()
        return getgenv().nameEnabled == true
    end

    local espObjects = {} -- Store ESP objects for reuse

    local function createESPText(p)
        local text = Drawing.new("Text")
        text.Visible = false
        text.Center = true
        text.Outline = true 
        text.Font = 2
        text.Color = Color3.fromRGB(255, 255, 255)
        text.Size = 13
        espObjects[p.UserId] = {NameText = text, WantedText = nil} -- Store the text object by player UserId
        return text
    end

    local function createWantedText(p)
        local wantedText = Drawing.new("Text")
        wantedText.Visible = false
        wantedText.Center = true
        wantedText.Outline = true 
        wantedText.Font = 2
        wantedText.Color = Color3.fromRGB(255, 0, 0) -- Change color for wanted text
        wantedText.Size = 13
        espObjects[p.UserId].WantedText = wantedText -- Store wanted text
        return wantedText
    end

    local function esp(p, cr)
        local h = cr:WaitForChild("Humanoid")
        local hrp = cr:WaitForChild("Head")
        local nameText = createESPText(p) -- Create or get ESP text
        local wantedText = createWantedText(p) -- Create or get wanted text

        local c1, c2, c3

        local function dc()
            nameText.Visible = false
            nameText:Remove()
            wantedText.Visible = false
            wantedText:Remove()
            espObjects[p.UserId] = nil -- Clean up the reference
            if c1 then c1:Disconnect() c1 = nil end
            if c2 then c2:Disconnect() c2 = nil end
            if c3 then c3:Disconnect() c3 = nil end
        end

        c2 = cr.AncestryChanged:Connect(function(_, parent)
            if not parent then
                dc()
            end
        end)

        c3 = h.HealthChanged:Connect(function(v)
            if (v <= 0) or (h:GetState() == Enum.HumanoidStateType.Dead) then
                dc()
            end
        end)

        c1 = rs.RenderStepped:Connect(function()
            pcall(function()
                if isNameEnabled() then
                    local hrp_pos, hrp_onscreen = c:WorldToViewportPoint(hrp.Position)
                    if hrp_onscreen then
                        nameText.Position = Vector2.new(hrp_pos.X, hrp_pos.Y - 30)
                        nameText.Text = p.Name
                        nameText.Visible = true

                        -- Check if wanted ESP is enabled
                        if wantedEnabled then
                            local wantedValue = p:FindFirstChild("leaderstats") and p.leaderstats:FindFirstChild("Wanted")
                            if wantedValue then
                                wantedText.Position = Vector2.new(hrp_pos.X, hrp_pos.Y - 50) -- Position above the name
                                wantedText.Text = "wanted: " .. wantedValue.Value
                                wantedText.Visible = true
                            else
                                wantedText.Visible = false
                            end
                        else
                            wantedText.Visible = false
                        end
                    else
                        nameText.Visible = false
                        wantedText.Visible = false
                    end
                else
                    nameText.Visible = false
                    wantedText.Visible = false
                end
            end)
        end)
    end

    local function p_added(p)
        pcall(function()
            if p.Character then
                esp(p, p.Character)
            end
            p.CharacterAdded:Connect(function(cr)
                esp(p, cr)
            end)
        end)
    end

    for _, p in next, ps:GetPlayers() do 
        if p ~= lp then
            p_added(p)
        end
    end

    ps.PlayerAdded:Connect(p_added)

    -- Monitor changes to nameEnabled in a separate thread
    spawn(function()
        while true do
            wait(1) -- Check every second to reduce performance impact
            pcall(function()
                if isNameEnabled() then
                    for _, p in next, ps:GetPlayers() do 
                        if p ~= lp and not espObjects[p.UserId] then
                            p_added(p) -- Add ESP if player has no character
                        end
                    end
                end
            end)
        end
    end)
end})

VisualMainSection:toggle({name = "wanted esp", def = false, callback = function(Boolean)
    wantedEnabled = Boolean -- Update the variable based on toggle state
end})


VisualSkySection:toggle({name = "shadows", def = true, callback = function(Boolean)
    game.Lighting.GlobalShadows = Boolean
end})

VisualSkySection:toggle({name = "always day", def = false, callback = function(Boolean)
getgenv().skyTime = Boolean

    local function updateClockTime()
        if getgenv().skyTime then
            game:GetService("Lighting").ClockTime = 12
        end
    end
    game:GetService("RunService").Heartbeat:Connect(updateClockTime)
end})

VisualSkySection:button({name = "chat revealer", callback = function()
    game.Players.LocalPlayer.PlayerGui.Chat.Frame.Visible = true
    game.Players.LocalPlayer.PlayerGui.Chat.Frame.ChatBarParentFrame.Visible = true
    game.Players.LocalPlayer.PlayerGui.Chat.Frame.ChatChannelParentFrame.Visible = true
end})

VisualPurpSection:button({name = "purple skybox", callback = function()
    local sky = game.Lighting.Sky
wait(1)
sky.SkyboxBk = "rbxassetid://7088408872"
sky.SkyboxDn = "rbxassetid://7088397282"
sky.SkyboxFt = "rbxassetid://7088413584"
sky.SkyboxLf = "rbxassetid://7088411493"
sky.SkyboxRt = "rbxassetid://7088391586"
sky.SkyboxUp = "rbxassetid://7088394088"
sky.StarCount = 0
sky.SunAngularSize = 0
sky.CelestialBodiesShown = false
sky.MoonAngularSize = 0
end})

VisualPurpSection:button({name = "purple items", callback = function()
    if game.PlaceId == 2788229376 then
        local Material = Enum.Material.ForceField -- this changes material of weapon
        local Color = Color3.fromRGB(135, 25, 255) -- this changes color of weapon
    
        game:GetService"RunService".RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("[Glock]") then
                game.Players.LocalPlayer.Character["[Glock]"].Default.Material = Material
                game.Players.LocalPlayer.Character["[Glock]"].Default.Color = Color
                game.Players.LocalPlayer.Character["[Glock]"].Default.TextureID = ""
            end
        end)

        game:GetService("RunService").RenderStepped:Connect(function()
            local tool = game.Players.LocalPlayer.Character:FindFirstChild("Wallet")
        
            if tool then
                if tool:FindFirstChild("Handle") then
                    local handle = tool.Handle
                    handle.BillboardGui.TextLabel.TextColor3 = Color
                    handle.Material = Material
                    handle.Color = Color
                    handle.UsePartColor = true
                end
                for _, child in ipairs(tool:GetChildren()) do
                    if child.Name == "Part" then
                        for _, decal in ipairs(child:GetChildren()) do
                            if decal:IsA("Decal") then
                                decal:Destroy()
                            end
                        end
                        child.Material = Material
                        child.Color = Color
        
                    end
                end
            end
        end)

        game:GetService"RunService".RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("[Phone]") then
                game.Players.LocalPlayer.Character["[Phone]"]["[Regular]"].Material = Material
                game.Players.LocalPlayer.Character["[Phone]"]["[Regular]"].Color = Color
                game.Players.LocalPlayer.Character["[Phone]"]["[Regular]"].TextureID = ""

                game.Players.LocalPlayer.Character["[Phone]"]["[Old Phone]"].Material = Material
                game.Players.LocalPlayer.Character["[Phone]"]["[Old Phone]"].Color = Color
                game.Players.LocalPlayer.Character["[Phone]"]["[Old Phone]"].TextureID = ""

                game.Players.LocalPlayer.Character["[Phone]"]["[Orange Phone]"].Material = Material
                game.Players.LocalPlayer.Character["[Phone]"]["[Orange Phone]"].Color = Color
                game.Players.LocalPlayer.Character["[Phone]"]["[Orange Phone]"].TextureID = ""

                game.Players.LocalPlayer.Character["[Phone]"]["[PinkPhone]"].Material = Material
                game.Players.LocalPlayer.Character["[Phone]"]["[PinkPhone]"].Color = Color
                game.Players.LocalPlayer.Character["[Phone]"]["[PinkPhone]"].TextureID = ""

                game.Players.LocalPlayer.Character["[Phone]"]["[Tele]"].Material = Material
                game.Players.LocalPlayer.Character["[Phone]"]["[Tele]"].Color = Color
                game.Players.LocalPlayer.Character["[Phone]"]["[Tele]"].TextureID = ""
                
                game.Players.LocalPlayer.Character["[Phone]"]["[iPhone]"].Material = Material
                game.Players.LocalPlayer.Character["[Phone]"]["[iPhone]"].Color = Color
                game.Players.LocalPlayer.Character["[Phone]"]["[iPhone]"].TextureID = ""


            end
        end)

        game:GetService"RunService".RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("[Chicken]") then
                game.Players.LocalPlayer.Character["[Chicken]"].Handle.Part.Material = Material
                game.Players.LocalPlayer.Character["[Chicken]"].Handle.Part.Color = Color
                game.Players.LocalPlayer.Character["[Chicken]"].Handle.Part.TextureID = ""
            end
        end)

        game:GetService"RunService".RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("[Taco]") then
                game.Players.LocalPlayer.Character["[Taco]"].Handle.Part.Material = Material
                game.Players.LocalPlayer.Character["[Taco]"].Handle.Part.Color = Color
                game.Players.LocalPlayer.Character["[Taco]"].Handle.Part.TextureID = ""
            end
        end)
        
        game:GetService"RunService".RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("[Popcorn]") then
                game.Players.LocalPlayer.Character["[Popcorn]"].Handle.Part.Material = Material
                game.Players.LocalPlayer.Character["[Popcorn]"].Handle.Part.Color = Color
                game.Players.LocalPlayer.Character["[Popcorn]"].Handle.Part.TextureID = ""
            end
        end)

        game:GetService"RunService".RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("[Hamburger]") then
                game.Players.LocalPlayer.Character["[Hamburger]"].Handle.Part.Material = Material
                game.Players.LocalPlayer.Character["[Hamburger]"].Handle.Part.Color = Color
                game.Players.LocalPlayer.Character["[Hamburger]"].Handle.Part.TextureID = ""
            end
        end)

        game:GetService"RunService".RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("[Pizza]") then
                game.Players.LocalPlayer.Character["[Pizza]"].Handle.Part.Material = Material
                game.Players.LocalPlayer.Character["[Pizza]"].Handle.Part.Color = Color
                game.Players.LocalPlayer.Character["[Pizza]"].Handle.Part.TextureID = ""
            end
        end)

        game:GetService"RunService".RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("[Cranberry]") then
                game.Players.LocalPlayer.Character["[Cranberry]"].Handle.Part.Material = Material
                game.Players.LocalPlayer.Character["[Cranberry]"].Handle.Part.Color = Color
                game.Players.LocalPlayer.Character["[Cranberry]"].Handle.Part.TextureID = ""
            end
        end)

        game:GetService"RunService".RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("[Knife]") then
                game.Players.LocalPlayer.Character["[Knife]"].Default.Material = Material
                game.Players.LocalPlayer.Character["[Knife]"].Default.Color = Color
                game.Players.LocalPlayer.Character["[Knife]"].Default.TextureID = ""
            end
        end)
    
        game:GetService"RunService".RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("[Silencer]") then
                game.Players.LocalPlayer.Character["[Silencer]"].Default.Material = Material
                game.Players.LocalPlayer.Character["[Silencer]"].Default.Color = Color
                game.Players.LocalPlayer.Character["[Silencer]"].Default.TextureID = ""
            end
        end)
    
        game:GetService"RunService".RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("[AR]") then
                game.Players.LocalPlayer.Character["[AR]"].Default.Material = Material
                game.Players.LocalPlayer.Character["[AR]"].Default.Color = Color
                game.Players.LocalPlayer.Character["[AR]"].Default.TextureID = ""
            end
        end)
    
        game:GetService"RunService".RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("[TacticalShotgun]") then
                game.Players.LocalPlayer.Character["[TacticalShotgun]"].Default.Material = Material
                game.Players.LocalPlayer.Character["[TacticalShotgun]"].Default.Color = Color
                game.Players.LocalPlayer.Character["[TacticalShotgun]"].Default.TextureID = ""
            end
        end)
    
        game:GetService"RunService".RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("[P90]") then
                game.Players.LocalPlayer.Character["[P90]"].Default.Material = Material
                game.Players.LocalPlayer.Character["[P90]"].Default.Color = Color
                game.Players.LocalPlayer.Character["[P90]"].Default.TextureID = ""
            end
        end)
    
        game:GetService"RunService".RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("[AUG]") then
                game.Players.LocalPlayer.Character["[AUG]"].Default.Material = Material
                game.Players.LocalPlayer.Character["[AUG]"].Default.Color = Color
                game.Players.LocalPlayer.Character["[AUG]"].Default.TextureID = ""
            end
        end)
    
        game:GetService"RunService".RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("[SMG]") then
                game.Players.LocalPlayer.Character["[SMG]"].Default.Material = Material
                game.Players.LocalPlayer.Character["[SMG]"].Default.Color = Color
                game.Players.LocalPlayer.Character["[SMG]"].Default.TextureID = ""
            end
        end)
    
        game:GetService"RunService".RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("[Shotgun]") then
                game.Players.LocalPlayer.Character["[Shotgun]"].Default.Material = Material
                game.Players.LocalPlayer.Character["[Shotgun]"].Default.Color = Color
                game.Players.LocalPlayer.Character["[Shotgun]"].Default.TextureID = ""
            end
        end)
    
        game:GetService"RunService".RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("[RPG]") then
                game.Players.LocalPlayer.Character["[RPG]"].Default.Material = Material
                game.Players.LocalPlayer.Character["[RPG]"].Default.Color = Color
                game.Players.LocalPlayer.Character["[RPG]"].Default.TextureID = ""
            end
        end)
    
        game:GetService"RunService".RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("[Double-Barrel SG]") then
                game.Players.LocalPlayer.Character["[Double-Barrel SG]"].Default.Material = Material
                game.Players.LocalPlayer.Character["[Double-Barrel SG]"].Default.Color = Color
                game.Players.LocalPlayer.Character["[Double-Barrel SG]"].Default.TextureID = ""
            end
        end)
    
        game:GetService"RunService".RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("[Flamethrower]") then
                game.Players.LocalPlayer.Character["[Flamethrower]"].Default.Material = Material
                game.Players.LocalPlayer.Character["[Flamethrower]"].Default.Color = Color
                game.Players.LocalPlayer.Character["[Flamethrower]"].Default.TextureID = ""
            end
        end)
        
        game:GetService"RunService".RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("[GrenadeLaucher]") then
                game.Players.LocalPlayer.Character["[GrenadeLaucher]"].Default.Material = Material
                game.Players.LocalPlayer.Character["[GrenadeLaucher]"].Default.Color = Color
                game.Players.LocalPlayer.Character["[GrenadeLaucher]"].Default.TextureID = ""
            end
        end)
    
        game:GetService"RunService".RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("[Revolver]") then
                game.Players.LocalPlayer.Character["[Revolver]"].Default.Material = Material
                game.Players.LocalPlayer.Character["[Revolver]"].Default.Color = Color
                game.Players.LocalPlayer.Character["[Revolver]"].Default.TextureID = ""
            end
        end)
        
        game:GetService"RunService".RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("[Grenade]") then
                game.Players.LocalPlayer.Character["[Grenade]"].Default.Material = Material
                game.Players.LocalPlayer.Character["[Grenade]"].Default.Color = Color
                game.Players.LocalPlayer.Character["[Grenade]"].Default.TextureID = ""
            end
        end)
        
        game:GetService"RunService".RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("[LMG]") then
                game.Players.LocalPlayer.Character["[LMG]"].Default.Material = Material
                game.Players.LocalPlayer.Character["[LMG]"].Default.Color = Color
                game.Players.LocalPlayer.Character["[LMG]"].Default.TextureID = ""
            end
        end)
    
        game:GetService"RunService".RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("[AK47]") then
                game.Players.LocalPlayer.Character["[AK47]"].Default.Material = Material
                game.Players.LocalPlayer.Character["[AK47]"].Default.Color = Color
                game.Players.LocalPlayer.Character["[AK47]"].Default.TextureID = ""
            end
        end)
    
        game:GetService"RunService".RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("[DrumGun]") then
                game.Players.LocalPlayer.Character["[DrumGun]"].Default.Material = Material
                game.Players.LocalPlayer.Character["[DrumGun]"].Default.Color = Color
                game.Players.LocalPlayer.Character["[DrumGun]"].Default.TextureID = ""
            end
        end)
    
        game:GetService"RunService".RenderStepped:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("[SilencerAR]") then
                game.Players.LocalPlayer.Character["[SilencerAR]"].Default.Material = Material
                game.Players.LocalPlayer.Character["[SilencerAR]"].Default.Color = Color
                game.Players.LocalPlayer.Character["[SilencerAR]"].Default.TextureID = ""
            end
        end)
    end
end})


VisualPurpSection:button({name = "purple ui", callback = function()
local r, g, b = 170, 0, 255
game:GetService("RunService").RenderStepped:Connect(function()
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Bar.Armor.Picture.BackgroundColor3 = Color3.fromRGB(r, g, b)
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Bar.Armor.Picture.Border.BackgroundColor3 = Color3.fromRGB(r, g, b)
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Bar.Armor.Picture.Border.ImageColor3 = Color3.fromRGB(r, g, b)
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Bar.Armor.Picture.Image.ImageColor3 = Color3.fromRGB(r, g, b)
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Bar.Armor.bar.BackgroundColor3 = Color3.fromRGB(r, g, b)
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Bar.Armor.TextLabel.Text = "todays tolerance for niggers"
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Bar.Armor.TextLabel.TextScaled = true

    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Bar.Energy.Picture.BackgroundColor3 = Color3.fromRGB(r, g, b)
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Bar.Energy.Picture.Border.BackgroundColor3 = Color3.fromRGB(r, g, b)
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Bar.Energy.Picture.Border.ImageColor3 = Color3.fromRGB(r, g, b)
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Bar.Energy.Picture.Image.ImageColor3 = Color3.fromRGB(r, g, b)
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Bar.Energy.bar.BackgroundColor3 = Color3.fromRGB(r, g, b)
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Bar.Energy.TextLabel.Text = "todays energy for raping kids"
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Bar.Energy.TextLabel.TextScaled = true
    
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Bar.HP.Picture.BackgroundColor3 = Color3.fromRGB(r, g, b)
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Bar.HP.Picture.Border.BackgroundColor3 = Color3.fromRGB(r, g, b)
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Bar.HP.Picture.Border.ImageColor3 = Color3.fromRGB(r, g, b)
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Bar.HP.Picture.Image.ImageColor3 = Color3.fromRGB(r, g, b)
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Bar.HP.bar.BackgroundColor3 = Color3.fromRGB(r, g, b)
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Bar.HP.TextLabel.Text = "love for gay sex"
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Bar.HP.TextLabel.TextScaled = true

    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Crew.BottomLeft.Frame.Crew.ImageColor3 = Color3.fromRGB(r, g, b) 
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Crew.BottomLeft.Frame.Settings.ImageColor3 = Color3.fromRGB(r, g, b) 
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Crew.BottomLeft.Frame.Edit.ImageColor3 = Color3.fromRGB(r, g, b) 
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Crew.BottomLeft.Frame.Skins.ImageColor3 = Color3.fromRGB(r, g, b) 
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Crew.BottomLeft.Frame.Task.ImageColor3 = Color3.fromRGB(r, g, b) 
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Promote.ImageButton.ImageColor3 = Color3.fromRGB(r, g, b)   
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Crew.BottomLeft.Frame.ZShopButton.ImageLabel.ImageColor3 = Color3.fromRGB(r, g, b) 
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Crew.BottomLeft.Frame.ZShopButton.TextLabel.Text = "NIGGA"
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.Crew.BottomLeft.Frame.ZShopButton.TextLabel.TextColor3 = Color3.fromRGB(r, g, b)
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.MoneyText.TextColor3 = Color3.fromRGB(r, g, b)
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.WalletDrop.TextButton.Text = "RAPE NIGGERS"
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.WalletDrop.TextBox.Text = "drop atleast $100 broke ass nigga"
    game.Players.LocalPlayer.PlayerGui.MainScreenGui.WalletDrop.TextBox.TextScaled = true
    wait(3)
end)

end})

--// Misc Sections

MiscMoveSettings:toggle({name = "walkspeed", def = false, callback = function(Boolean)
 PuppySettings.Misc.CFrameSpeed.Enabled = Boolean
end})

MiscMoveSettings:keybind({name = "walkspeed keybind", def = Enum.KeyCode.V, callback = function(Key)
 PuppySettings.Misc.CFrameSpeed.Keybind = Key
end})

MiscMoveSettings:slider({name = "walkspeed value", def = 100, max = 1000, min = 0, rounding = true, callback = function(Value)
 PuppySettings.Misc.CFrameSpeed.Speed = tonumber(Value)/100
end})

-- Misc Char
MiscCharSettings:button({name = "reset (ragdolled)", callback = function()
 NilBody()
end})

MiscFunSettings:button({name = "the curse", callback = function()
local newSoundId = "rbxassetid://9059590824" local function replaceSoundIds(parent) for _, child in pairs(parent:GetChildren()) do if child:IsA("Sound") then child.SoundId = newSoundId end replaceSoundIds(child) end end replaceSoundIds(game.Workspace.Vehicles) while wait(1) do replaceSoundIds(game.Workspace.Vehicles) end
end})

MiscDbgSettings:button({name = "rejoin server", callback = function()
    game:GetService("TeleportService"):TeleportToPlaceInstance(game.PlaceId,game.JobId)
end})


-- item buyer

BuyGunSection:button({name = "buy revolver ($1485)", callback = function()
    wait(0.1)
    getgenv().ogPos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    wait(0.1)
    local player = game.Players.LocalPlayer if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then  player.Character.HumanoidRootPart.CFrame = CFrame.new(unpack(getgenv().revoCFrame:split(", ")))  end
    wait(0.3)
    fireclickdetector(game.Workspace.Ignored.Shop["[Revolver] - $1485"].ClickDetector)
    wait(0.1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().ogPos
   end})

BuyGunSection:button({name = "buy double-barrel ($1485)", callback = function()
    wait(0.1)
    getgenv().ogPos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    wait(0.1)
    local player = game.Players.LocalPlayer if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then  player.Character.HumanoidRootPart.CFrame = CFrame.new(unpack(getgenv().dbCFrame:split(", ")))  end
    wait(0.3)
    fireclickdetector(game.Workspace.Ignored.Shop["[Double-Barrel SG] - $1485"].ClickDetector)
    wait(0.1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().ogPos
end})

BuyGunSection:button({name = "buy LMG ($3978)", callback = function()
    wait(0.1)
    getgenv().ogPos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    wait(0.1)
    local player = game.Players.LocalPlayer if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then  player.Character.HumanoidRootPart.CFrame = CFrame.new(unpack(getgenv().lmgCFame:split(", ")))  end
    wait(0.3)
    fireclickdetector(game.Workspace.Ignored.Shop["[LMG] - $3978"].ClickDetector)
    wait(0.1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().ogPos
end})

BuyAmmoSection:button({name = "buy revolver ammo ($53)", callback = function()
    wait(0.1)
    getgenv().ogPos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    wait(0.1)
    local player = game.Players.LocalPlayer if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then  player.Character.HumanoidRootPart.CFrame = CFrame.new(unpack(getgenv().revoAmmoCFrame:split(", ")))  end
    wait(0.3)
    fireclickdetector(game.Workspace.Ignored.Shop["12 [Revolver Ammo] - $53"].ClickDetector)
    wait(0.1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().ogPos
end})

BuyAmmoSection:button({name = "buy db ammo ($64)", callback = function()
    wait(0.1)
    getgenv().ogPos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    wait(0.1)
    local player = game.Players.LocalPlayer if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then  player.Character.HumanoidRootPart.CFrame = CFrame.new(unpack(getgenv().dbAmmoCFrame:split(", ")))  end
    wait(0.3)
    fireclickdetector(game.Workspace.Ignored.Shop["18 [Double-Barrel SG Ammo] - $64"].ClickDetector)
    wait(0.1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().ogPos
end})

BuyAmmoSection:button({name = "buy LMG ammo ($318)", callback = function()
    wait(0.1)
    getgenv().ogPos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    wait(0.1)
    local player = game.Players.LocalPlayer if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then  player.Character.HumanoidRootPart.CFrame = CFrame.new(unpack(getgenv().lmgAmmoCFrame:split(", ")))  end
    wait(0.3)
    fireclickdetector(game.Workspace.Ignored.Shop["200 [LMG Ammo] - $318"].ClickDetector)
    wait(0.1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().ogPos
end})

BuyArmorSection:button({name = "buy medium armor ($1326)", callback = function()
    wait(0.1)
    getgenv().ogPos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    wait(0.1)
    local player = game.Players.LocalPlayer if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then  player.Character.HumanoidRootPart.CFrame = CFrame.new(unpack(getgenv().mediumArmorCFrame:split(", ")))  end
    wait(0.3)
    fireclickdetector(game.Workspace.Ignored.Shop["[Medium Armor] - $1326"].ClickDetector)
    wait(0.1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().ogPos
end})


BuyArmorSection:button({name = "buy high armor ($2440)", callback = function()
    wait(0.1)
    getgenv().ogPos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    wait(0.1)
    local player = game.Players.LocalPlayer if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then  player.Character.HumanoidRootPart.CFrame = CFrame.new(unpack(getgenv().highArmorCFrame:split(", ")))  end
    wait(0.3)
    fireclickdetector(game.Workspace.Ignored.Shop["[High-Medium Armor] - $2440"].ClickDetector)
    wait(0.1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().ogPos
end})

BuyArmorSection:button({name = "buy fire armor ($2493)", callback = function()
    wait(0.1)
    getgenv().ogPos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    wait(0.1)
    local player = game.Players.LocalPlayer if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then  player.Character.HumanoidRootPart.CFrame = CFrame.new(unpack(getgenv().fireArmorCFrame:split(", ")))  end
    wait(0.3)
    fireclickdetector(game.Workspace.Ignored.Shop["[Fire Armor] - $2493"].ClickDetector)
    wait(0.1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().ogPos
end})

BuyFoodSection:button({name = "tacodick ($2)", callback = function()
    wait(0.1)
    getgenv().ogPos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    wait(0.1)
    local player = game.Players.LocalPlayer if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then  player.Character.HumanoidRootPart.CFrame = CFrame.new(unpack(getgenv().tacoCFrame:split(", ")))  end
    wait(0.3)
    fireclickdetector(game.Workspace.Ignored.Shop["[Taco] - $2"].ClickDetector)
    wait(0.1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().ogPos
end})

BuyFoodSection:button({name = "buy kfc ($7)", callback = function()
    wait(0.1)
    getgenv().ogPos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
    wait(0.1)
    local player = game.Players.LocalPlayer if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then  player.Character.HumanoidRootPart.CFrame = CFrame.new(unpack(getgenv().chickenCFrame:split(", ")))  end
    wait(0.3)
    fireclickdetector(game.Workspace.Ignored.Shop["[Chicken] - $7"].ClickDetector)
    wait(0.1)
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().ogPos
end})


AimingTab:openpage()

-- Init --

--// Lock Normal
getgenv().AimlockKey = "c"
getgenv().AimRadius = 30 
getgenv().ThirdPerson = true 
getgenv().FirstPerson = true
getgenv().PredictionVelocity = 14

local Players, Uis, RService, SGui = game:GetService"Players", game:GetService"UserInputService", game:GetService"RunService", game:GetService"StarterGui";
local Client, Mouse, Camera, CF, RNew, Vec3, Vec2 = Players.LocalPlayer, Players.LocalPlayer:GetMouse(), workspace.CurrentCamera, CFrame.new, Ray.new, Vector3.new, Vector2.new;
local MousePressed, CanNotify = false, false;
local AimlockTarget;
local OldPre;

getgenv().GetNearestTarget = function()
    local players = {}
    local PLAYER_HOLD  = {}
    local DISTANCES = {}
    for i, v in pairs(Players:GetPlayers()) do
        if v ~= Client then
            table.insert(players, v)
        end
    end
    for i, v in pairs(players) do
        if v.Character ~= nil then
            local AIM = v.Character:FindFirstChild("Head")
                local DISTANCE = (v.Character:FindFirstChild("Head").Position - game.Workspace.CurrentCamera.CFrame.p).magnitude
                local RAY = Ray.new(game.Workspace.CurrentCamera.CFrame.p, (Mouse.Hit.p - game.Workspace.CurrentCamera.CFrame.p).unit * DISTANCE)
                local HIT,POS = game.Workspace:FindPartOnRay(RAY, game.Workspace)
                local DIFF = math.floor((POS - AIM.Position).magnitude)
                PLAYER_HOLD[v.Name .. i] = {}
                PLAYER_HOLD[v.Name .. i].dist= DISTANCE
                PLAYER_HOLD[v.Name .. i].plr = v
                PLAYER_HOLD[v.Name .. i].diff = DIFF
                table.insert(DISTANCES, DIFF)
        end
    end
    
    if unpack(DISTANCES) == nil then
        return nil
    end
    
    local L_DISTANCE = math.floor(math.min(unpack(DISTANCES)))
    if L_DISTANCE > getgenv().AimRadius then
        return nil
    end
    
    for i, v in pairs(PLAYER_HOLD) do
        if v.diff == L_DISTANCE then
            return v.plr
        end
    end
    return nil
end

Mouse.KeyDown:Connect(function(a)
    if not (Uis:GetFocusedTextBox()) then 
        if a == AimlockKey and AimlockTarget == nil then
            pcall(function()
                if MousePressed ~= true then MousePressed = true end 
                local Target;Target = GetNearestTarget()
                if Target ~= nil then 
                    AimlockTarget = Target
                end
            end)
        elseif a == AimlockKey and AimlockTarget ~= nil then
            if AimlockTarget ~= nil then AimlockTarget = nil end
            if MousePressed ~= false then 
                MousePressed = false 
            end
        end
    end
end)

RService.RenderStepped:Connect(function()
    if PuppySettings.Aimbot.Enabled then
        if getgenv().ThirdPerson == true and getgenv().FirstPerson == true then
            CanNotify = (Camera.Focus.p - Camera.CoordinateFrame.p).Magnitude > 1 or (Camera.Focus.p - Camera.CoordinateFrame.p).Magnitude <= 1
        elseif getgenv().ThirdPerson == true and getgenv().FirstPerson == false then
            CanNotify = (Camera.Focus.p - Camera.CoordinateFrame.p).Magnitude > 1
        elseif getgenv().ThirdPerson == false and getgenv().FirstPerson == true then
            CanNotify = (Camera.Focus.p - Camera.CoordinateFrame.p).Magnitude <= 1
        end

        if MousePressed == true and AimlockTarget and AimlockTarget.Character and AimlockTarget.Character:FindFirstChild(PuppySettings.Aimbot.Hitboxes) then
            if getgenv().FirstPerson == true and CanNotify == true then
                if PuppySettings.Aimbot.Prediction == true then
                    local targetPos = AimlockTarget.Character[PuppySettings.Aimbot.Hitboxes].Position + AimlockTarget.Character[PuppySettings.Aimbot.Hitboxes].Velocity / PuppySettings.AimbotSettings.PredictionVelocity
                    local Main = CF(Camera.CFrame.p, targetPos)
                    if PuppySettings.AimbotSettings.Smoothness == true then
                        Camera.CFrame = Camera.CFrame:Lerp(Main, PuppySettings.AimbotSettings.SmoothnessAmmount, Enum.EasingStyle.Elastic, Enum.EasingDirection.InOut)
                    else
                        Camera.CFrame = CF(Camera.CFrame.p, targetPos)
                    end
                else
                    local targetPos = AimlockTarget.Character[PuppySettings.Aimbot.Hitboxes].Position
                    local Main = CF(Camera.CFrame.p, targetPos)
                    if PuppySettings.AimbotSettings.Smoothness == true then
                        Camera.CFrame = Camera.CFrame:Lerp(Main, PuppySettings.AimbotSettings.SmoothnessAmmount, Enum.EasingStyle.Elastic, Enum.EasingDirection.InOut)
                    else
                        Camera.CFrame = CF(Camera.CFrame.p, targetPos)
                    end
                end
                
                -- Highlight the target if chams are enabled
                if getgenv().targetChams == true then
                    if currentTarget ~= AimlockTarget then
                        removeHighlight()
                        currentHighlight = Instance.new("Highlight")
                        currentHighlight.Name = AimlockTarget.Name
                        currentHighlight.FillColor = Color3.fromRGB(193, 0, 255)
                        currentHighlight.DepthMode = "AlwaysOnTop"
                        currentHighlight.FillTransparency = 0.25
                        currentHighlight.OutlineColor = Color3.fromRGB(255, 255, 255)
                        currentHighlight.OutlineTransparency = 0.35
                        currentHighlight.Adornee = AimlockTarget.Character
                        currentHighlight.Parent = HighlightFolder
                        currentTarget = AimlockTarget
                    else
                        currentHighlight.Adornee = AimlockTarget.Character
                    end
                end
            end
        else
            -- Remove the highlight when the lock is released
            removeHighlight()
        end
    else
        -- Remove highlight if Aimbot is disabled
        removeHighlight()
    end
end)

function NoSpace(Data)
    return Data:gsub("%s+", "") or Data
end

--// Auto Peak
local APEF = Instance.new("Folder")
APEF.Parent = game.Workspace
APEF.Name = "APEF"
getgenv().oldc = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
getgenv().APE = false
game:service('UserInputService').InputBegan:connect(function(Key, IsChat)
 if IsChat then return end
 if Key.KeyCode == PuppySettings.AutoPeak.APKey and PuppySettings.AutoPeak.Enabled == true then
  if getgenv().APE == false then
   getgenv().APE = true
   local APEPart = Instance.new("Part")
   APEPart.Parent = APEF
   APEPart.Name = "backTP"
   APEPart.Anchored = true
   APEPart.CanCollide = false
   APEPart.Position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position
   APEPart.Orientation = game.Players.LocalPlayer.Character.HumanoidRootPart.Orientation
   APEPart.Size = Vector3.new(1, 1, 1)
   APEPart.Transparency = 0.7
   APEPart.BrickColor = BrickColor.new("Institutional white")
   APEPart.Material = "SmoothPlastic"
   getgenv().oldc = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
  elseif getgenv().APE == true then
   getgenv().APE = false
   game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = getgenv().oldc
   game.Workspace.APEF.backTP:Destroy()
  end
 end
end)

--// Esp Bones

--// BackTrack
local BTF = Instance.new("Folder")
BTF.Parent = game.Workspace
BTF.Name = "BTF"

--//SFOV
local SilentAimFOV = Drawing.new("Circle")
SilentAimFOV.Thickness = 2

--//Auto Clicker
getgenv().Clicking = false
game:service('UserInputService').InputBegan:connect(function(Key, IsChat)
 if IsChat then return end 
 if Key.KeyCode == PuppySettings.AutoClicker.Keybind and PuppySettings.AutoClicker.Enabled == true then
  getgenv().Clicking = not getgenv().Clicking
 end
end)

--// Legit AA
getgenv().LegitAA = false
getgenv().CFSpeed = false

game:service('UserInputService').InputBegan:connect(function(Key, IsChat)
 if IsChat then return end
 if Key.KeyCode == PuppySettings.AntiAim.LegitAAKey and PuppySettings.AntiAim.Legit == true and PuppySettings.AntiAim.Enabled == true then
  getgenv().LegitAA = not getgenv().LegitAA
 end
end)

game:service('UserInputService').InputBegan:connect(function(Key, IsChat)
 if IsChat then return end
 if Key.KeyCode == PuppySettings.Misc.CFrameSpeed.Keybind and PuppySettings.Misc.CFrameSpeed.Enabled == true then
  getgenv().CFSpeed = not getgenv().CFSpeed
 end
end)
    
function Find(Data)
   getgenv().Target = nil
    for i, v in next, Players:GetPlayers() do
        if v.Name ~= LocalPlayer.Name and v.Name:lower():match('^'.. NoSpace(Data):lower()) then
            getgenv().Target = v.Name
        end
    end
    
    return getgenv().Target
end

function IsNetwork(GetPlayer)
 return GetPlayer and GetPlayer.Character and GetPlayer.Character:FindFirstChild("HumanoidRootPart") ~= nil and GetPlayer.Character:FindFirstChild("Humanoid") ~= nil and GetPlayer.Character:FindFirstChild("Head") ~= nil and true or false
end

function Knocked(GetPlayer)
    if IsNetwork(GetPlayer) then
        return GetPlayer.Character.BodyEffects["K.O"].Value and true or false
    end
    return false
end

function Grabbing(GetPlayer)
    if IsNetwork(GetPlayer) then
        return GetPlayer.Character:FindFirstChild("GRABBING_CONSTRAINT") and true or false
    end
    return false
end

function Alive(Player)
    if Player and Player.Character and Player.Character:FindFirstChild("HumanoidRootPart") ~= nil and Player.Character:FindFirstChild("Humanoid") ~= nil and Player.Character:FindFirstChild("Head") ~= nil then
        return true
    end
    return false
end

function CameraCheck(GetPosition, IgnoredList)
    if IsNetwork(LocalPlayer) then
        return #CurrentCamera:GetPartsObscuringTarget({LocalPlayer.Character.Head.Position, GetPosition}, IgnoredList) == 0 and true or false
    end
end

function WallCheck(OriginPart, Part)
    if IsNetwork(LocalPlayer) then
        local IgnoreList = {CurrentCamera, LocalPlayer.Character, OriginPart.Parent}
        local Parts = CurrentCamera:GetPartsObscuringTarget(
            {
                OriginPart.Position, 
                Part.Position
            },
            IgnoreList
        )
    
        for i, v in pairs(Parts) do
            if v.Transparency >= 0.3 then
                PuppyStorage.Instance[#PuppyStorage.Instance + 1] = v
            end
    
            if v.Material == Enum.Material.Glass then
                PuppyStorage.Instance[#PuppyStorage.Instance + 1] = v
            end
        end
    
        return #Parts == 0
    end
    return true
end

function NilBody()
    if Alive(LocalPlayer) then
        for i, v in pairs(LocalPlayer.Character:GetChildren()) do
            if v:IsA("BasePart") or v:IsA("Part") or v:IsA("MeshPart") then
                if v.Name ~= "HumanoidRootPart" then
                    v:Destroy()
                end
            end
        end
    end
end

function NearestDistance()
    local Target = nil
    local Distance = math.huge
    for i, v in next, Players:GetPlayers() do
        if v ~= LocalPlayer and Alive(LocalPlayer) and Alive(v) then
            local DistanceFromPlayer = (v.Character.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
            if Distance > DistanceFromPlayer then
                if (not PuppySettings.Whitelist.FriendsWhitelist or not table.find(PuppySettings.Whitelist.Friends, v.Name)) and (not PuppySettings.Whitelist.CrewEnabled or v:FindFirstChild("DataFolder") and v.DataFolder.Information:FindFirstChild("Crew") and not tonumber(v.DataFolder.Information.Crew.Value) == tonumber(LocalPlayer.DataFolder.Information.Crew.Value)) and (not PuppySettings.Whitelist.Enabled or not table.find(PuppySettings.Whitelist.Players, v.Name)) and (not PuppySettings.SilentAim.WallCheck or WallCheck(v.Character.HumanoidRootPart, LocalPlayer.Character.HumanoidRootPart)) then
                    Target = v
                    Distance = DistanceFromPlayer
                end
            end
        end
    end

    return Target, Distance
end

function NearestMouse()
    local Target = nil
    local Distance = math.huge
    for i, v in next, Players:GetPlayers() do
        if v ~= LocalPlayer and Alive(LocalPlayer) and Alive(v) then
            local RootPosition, RootVisible = CurrentCamera:WorldToViewportPoint(v.Character.HumanoidRootPart.Position)
            local DistanceFromMouse = (Vector2.new(RootPosition.X, RootPosition.Y) - Vector2.new(Mouse.X, Mouse.Y)).Magnitude
            if RootVisible and Distance > DistanceFromMouse then
                if (not PuppySettings.Whitelist.FriendsWhitelist or not table.find(PuppySettings.Whitelist.Friends, v.Name)) and (not PuppySettings.Whitelist.CrewEnabled or v:FindFirstChild("DataFolder") and v.DataFolder.Information:FindFirstChild("Crew") and not tonumber(v.DataFolder.Information.Crew.Value) == tonumber(LocalPlayer.DataFolder.Information.Crew.Value)) and (not PuppySettings.Whitelist.Enabled or not table.find(PuppySettings.Whitelist.Players, v.Name)) and (not PuppySettings.SilentAim.WallCheck or WallCheck(v.Character.HumanoidRootPart, LocalPlayer.Character.HumanoidRootPart)) then
                    Target = v
                    Distance = DistanceFromMouse
                end
            end
        end
    end

    return Target, Distance
end

function NearestType(Type)
    if Type == "Distance" then
        return NearestDistance()
    elseif Type == "Mouse" then
        return NearestMouse()
    end
end

function ChanceTable(Table)
    local Chance = 0
    for i, v in pairs(Table) do
        Chance = Chance + v
    end
    Chance = math.random(0, Chance)
    for i, v in pairs(Table) do
        Chance = Chance - v
        if Chance <= 0 then
            return i
        end
    end 
end

function RandomTable(Table)
    local Values = 0
    for i, v in pairs(Table) do
        Values = i
    end
    
    return Table[math.random(1, Values)]
end

local Plr
local Pos
local enabled = false
local placemarker = Instance.new("Part", game.Workspace)

function makemarker(Parent, Adornee, Color, Size, Size2)
    local e = Instance.new("BillboardGui", Parent)
    e.Name = "PP"
    e.Adornee = Adornee
    e.Size = UDim2.new(Size, Size2, Size, Size2)
    e.AlwaysOnTop = true
    local a = Instance.new("Frame", e)
    a.Size = UDim2.new(1, 0, 1, 0)
    a.Transparency = 0
    a.BackgroundTransparency = 0
    a.BackgroundColor3 = Color
    local g = Instance.new("UICorner", a)
    g.CornerRadius = UDim.new(50, 50)
    return(e)
end

spawn(function()
    placemarker.Anchored = true
    placemarker.CanCollide = false
    placemarker.Size = Vector3.new(8, 8, 8)
    placemarker.Transparency = 0.79
    makemarker(placemarker, placemarker, PuppySettings.SilentAim.DOTColor, 0.40, 0)
end)    

getgenv().islocked = false
Mouse.KeyDown:connect(function(key)
    if key:lower() == getgenv().SilentKeyy then 
        if getgenv().islocked == false and PuppySettings.SilentAim.Enabled and PuppySettings.SilentAim.UseFOV == false then
            if enabled == true then
            else
                enabled = true
            end
            getgenv().islocked = true
            if PuppySettings.SilentAim.UseNearestDistance then
    local NearestTarget, NearestPos = NearestDistance()
    if NearestTarget and (not PuppySettings.SilentAim.UseFOV or PuppySettings.FOV.SilentAimSize > NearestPos) and (not PuppySettings.SilentAim.KnockedCheck or not Knocked(NearestTarget)) and (not PuppySettings.SilentAim.grabbedCheck or not Grabbed(NearestTarget)) and (not PuppySettings.SilentAim.WallCheck or WallCheck(NearestTarget.Character.HumanoidRootPart, LocalPlayer.Character.HumanoidRootPart)) then
                Plr = NearestDistance()
                Pos = NearestPos
    end
            else
    local NearestTarget, NearestPos = NearestMouse()
    if NearestTarget and (not PuppySettings.SilentAim.UseFOV or PuppySettings.FOV.SilentAimSize > NearestPos) and (not PuppySettings.SilentAim.KnockedCheck or not Knocked(NearestTarget)) and (not PuppySettings.SilentAim.grabbedCheck or not Grabbed(NearestTarget)) and (not PuppySettings.SilentAim.WallCheck or WallCheck(NearestTarget.Character.HumanoidRootPart, LocalPlayer.Character.HumanoidRootPart)) then
                Plr = NearestMouse()
                Pos = NearestPos
    end
            end
            if PuppySettings.SilentAim.NotificationMode and Plr ~= game.Players.LocalPlayer then
                Notify({
                    Title = "aryanware",
                    Description = "Locked Onto: "..Plr.DisplayName,
                    Duration = 3
                })
            end
        elseif getgenv().islocked == true and PuppySettings.SilentAim.Enabled then
            getgenv().islocked = false
            enabled = false
   Plr = game.Players.LocalPlayer
            if PuppySettings.SilentAim.NotificationMode then
                Notify({
                    Title = "aryanware",
                    Description = "Unlocked",
                    Duration = 3
                })
            end
        end
    end
end)

--//Random Hitbox
local PuppyHitboxes = {
 "Head","UpperTorso","LowerTorso"
}

game:GetService("RunService").Heartbeat:Connect(function()
 if PuppySettings.AntiAim.Enabled == true and PuppySettings.AntiAim.Desync == true then
  game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector * PuppySettings.AntiAim.DesyncValues.Velocity
  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.Angles(0, math.rad(PuppySettings.AntiAim.DesyncValues.CFrame), 0)
 end -- Anti Aim Desync
 if PuppySettings.Misc.Antislow then
     getgenv().DeletePart = game.Players.LocalPlayer.Character.BodyEffects.Movement:FindFirstChild('NoJumping') or player.Character.BodyEffects.Movement:FindFirstChild('ReduceWalk') or player.Character.BodyEffects.Movement:FindFirstChild('NoWalkSpeed')
  if getgenv().DeletePart then getgenv().DeletePart:Destroy() end
  if game.Players.LocalPlayer.Character.BodyEffects.Reload.Value == true then game.Players.LocalPlayer.Character.BodyEffects.Reload.Value = false end
 end -- Anti Slow
 if PuppySettings.Misc.CFrameSpeed.Bhop and LocalPlayer.Character.Humanoid:GetState() ~= Enum.HumanoidStateType.Freefall then
  LocalPlayer.Character.Humanoid:ChangeState("Jumping")
 end -- Bhop
 if PuppySettings.Misc.Strafe then
  if LocalPlayer.Character.Humanoid.MoveDirection.Magnitude > 0 and LocalPlayer.Character.Humanoid:GetState() == Enum.HumanoidStateType.Freefall then
   LocalPlayer.Character:TranslateBy(LocalPlayer.Character.Humanoid.MoveDirection / 3.1)
  end
 end -- Strafe
 if PuppySettings.SilentAimSettings.PingPred1 and PuppySettings.SilentAim.Enabled then
  getgenv().ping = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
  getgenv().Value = tostring(getgenv().ping)
  getgenv().pingValue = getgenv().Value:split(" ")
  local PingNumber = getgenv().pingValue[1]
  getgenv().PredictionAmmount = PingNumber / 1000 + getgenv().Prediction
  print(getgenv().PredictionAmmount)
 end -- Ping Prediction 1
 if PuppySettings.SilentAimSettings.PingPred2 and not PuppySettings.SilentAimSettings.PingPred1 and PuppySettings.SilentAim.Enabled then
  pingvalue = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
  split = string.split(pingvalue,'(')
  ping = tonumber(split[1])
    if ping < 130 then
     PredictionValue = 0.151
    elseif ping < 125 then
     PredictionValue = 0.149
    elseif ping < 110 then
     PredictionValue = 0.146
    elseif ping < 105 then
     PredictionValue = 0.138
    elseif ping < 90 then
     PredictionValue = 0.136
    elseif ping < 80 then
     PredictionValue = 0.134
    elseif ping < 70 then
     PredictionValue = 0.131
    elseif ping < 60 then
     PredictionValue = 0.1229
    elseif ping < 50 then
     PredictionValue = 0.1225
    elseif ping < 40 then
     PredictionValue = 0.1256
    end
 end -- Ping Prediction 2
 if PuppySettings.SilentAim.ShowFOV then
  SilentAimFOV.Visible = true
        SilentAimFOV.Radius = PuppySettings.FOV.SilentAimSize
        SilentAimFOV.Filled = PuppySettings.FOV.FOVFilled
        SilentAimFOV.Transparency = PuppySettings.FOV.Transparency
        SilentAimFOV.NumSides = 100
        SilentAimFOV.Thickness = PuppySettings.FOV.Thickness
        SilentAimFOV.Color = PuppySettings.SilentAim.FOVColor
        SilentAimFOV.Position = Vector2.new(Mouse.X, Mouse.Y + GuiInset.Y)
    else
        SilentAimFOV.Visible = false
    end -- fov
 if PuppySettings.TriggerBot.Enabled then
  for i, v in next, Players:GetPlayers() do 
   if Alive(v) then 
    if Mouse.Target:IsDescendantOf(v.Character) and PuppySettings.TriggerBot.Enabled == true then 
     mouse1press()
     wait()
     mouse1release()
     wait(PuppySettings.TriggerBot.DelayAmount)
    end 
   end
  end
 end -- tb
    if PuppySettings.SilentAim.UseFOV == true and PuppySettings.SilentAim.Enabled then
        wait()
        enabled = true
        if PuppySettings.SilentAim.UseNearestDistance then
            local NearestTarget, NearestPos = NearestDistance()
            if NearestTarget and (not PuppySettings.SilentAim.UseFOV or PuppySettings.FOV.SilentAimSize > NearestPos) and (not PuppySettings.SilentAim.KnockedCheck or not Knocked(NearestTarget)) and (not PuppySettings.SilentAim.grabbedCheck or not Grabbed(NearestTarget)) and (not PuppySettings.SilentAim.WallCheck or WallCheck(NearestTarget.Character.HumanoidRootPart, LocalPlayer.Character.HumanoidRootPart)) then
                Plr = NearestDistance()
                Pos = NearestPos
            end
        else
            local NearestTarget, NearestPos = NearestMouse()
            if NearestTarget and (not PuppySettings.SilentAim.UseFOV or PuppySettings.FOV.SilentAimSize > NearestPos) and (not PuppySettings.SilentAim.KnockedCheck or not Knocked(NearestTarget)) and (not PuppySettings.SilentAim.grabbedCheck or not Grabbed(NearestTarget)) and (not PuppySettings.SilentAim.WallCheck or WallCheck(NearestTarget.Character.HumanoidRootPart, LocalPlayer.Character.HumanoidRootPart)) then
                Plr = NearestMouse()
                Pos = NearestPos
            end
        end
    end -- use fov 
    if PuppySettings.SilentAim.Enabled and enabled and Plr.Character and Plr.Character:FindFirstChild("HumanoidRootPart") and Plr ~= game.Players.LocalPlayer and PuppySettings.SilentAim.ShowHitbox then
        if PuppySettings.SilentAim.RandomHitbox then
            placemarker.CFrame = CFrame.new(Plr.Character[RandomTable(PuppyHitboxes)].Position + (Plr.Character[RandomTable(PuppyHitboxes)].Velocity * PuppySettings.SilentAimSettings.MovementPredictionAmount))
  else
            placemarker.CFrame = CFrame.new(Plr.Character[PuppySettings.SilentAim.Hitboxes].Position + (Plr.Character[PuppySettings.SilentAim.Hitboxes].Velocity * PuppySettings.SilentAimSettings.MovementPredictionAmount))
  end
    else
        placemarker.CFrame = CFrame.new(0, 9999, 0)
    end -- hitbox / dot
    if getgenv().LegitAA then
        if PuppySettings.AntiAim.FPSUnlocked == true then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + game.Players.LocalPlayer.Character.Humanoid.MoveDirection * -0.3
        else
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + game.Players.LocalPlayer.Character.Humanoid.MoveDirection * -0.5
        end
    end -- legit aa
    if getgenv().CFSpeed then
        game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + game.Players.LocalPlayer.Character.Humanoid.MoveDirection * PuppySettings.Misc.CFrameSpeed.Speed
    end -- cfspeed
    if getgenv().Clicking then
        mouse1click() 
        wait(0.001)
    end -- auto clciker
end)
